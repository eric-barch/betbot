// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Exchange {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  name      String           @unique @db.VarChar(255)
  leagues   League[]
  games     ExchangeToGame[]
  odds      Odd[]
}

model League {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  name         String     @unique @db.VarChar(255)
  abbreviation String     @db.VarChar(255)
  teams        Team[]
  exchanges    Exchange[]
}

model Team {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  regionFull     String   @db.VarChar(255)
  regionAbbr     String   @db.VarChar(255)
  identifierFull String   @db.VarChar(255)
  identifierAbbr String   @db.VarChar(255)
  league         League   @relation(fields: [leagueId], references: [id])
  leagueId       Int
  awayGames      Game[]   @relation("AwayTeamOnGame")
  homeGames      Game[]   @relation("HomeTeamOnGame")

  @@unique([leagueId, identifierFull])
}

model Game {
  id         Int              @id @default(autoincrement())
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  startDate  DateTime
  awayTeam   Team             @relation("AwayTeamOnGame", fields: [awayTeamId], references: [id])
  awayTeamId Int
  homeTeam   Team             @relation("HomeTeamOnGame", fields: [homeTeamId], references: [id])
  homeTeamId Int
  active     Boolean
  exchanges  ExchangeToGame[]
  statistics Statistic[]
}

model Statistic {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    Int
  active    Boolean
  odd       Odd[]

  @@unique([name, gameId])
}

model Odd {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  exchange    Exchange  @relation(fields: [exchangeId], references: [id])
  exchangeId  Int
  statistic   Statistic @relation(fields: [statisticId], references: [id])
  statisticId Int
  value       Float?
  price       Int?

  @@unique([exchangeId, statisticId])
}

model ExchangeToGame {
  exchange               Exchange @relation(fields: [exchangeId], references: [id])
  exchangeId             Int
  game                   Game     @relation(fields: [gameId], references: [id])
  gameId                 Int
  exchangeAssignedGameId String   @db.VarChar(255)

  @@id([exchangeId, gameId])
  @@unique([exchangeId, exchangeAssignedGameId])
}
